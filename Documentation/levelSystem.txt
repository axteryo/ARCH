
create maps
Create rooms
create characters
load level data
track level/room events



/*** INSTEAD OF ROOMS THINK SEQUENCES*****/



An idea is that the maps will store room data(enemies,objectives/items) the map will export the data into a room object which will spawn based on a sensor.

The level class will load and save level data

Level Data encompases: Maps, charater positions, completion information, etc.


Levels will consist of:
	A map object which will store map layer objects along with the current map texture.
	A CharacterSpawner Object which will create characters

level will load spritesheets, shapes, spawn Player, update, render, close.
	

level class:


	entityList<Entity*>
	roomList<room*>
	spawnPoint Struct{}
	SpawnList<spawnPoint>

load()
{
*********
	/** The tile map file is FIRST loaded and the functions below retrieve the necessary information from the JSON object **/
	
	
	
	//-getRooms()
/**for now spawn points will be their own layer instead of being encapsulated in rooms

	//-getSpawnPoints()

	//-createMap()
	

**********




	
	-SpriteBatcher.loadEntityTextures()
	//-EntitySpawner.loadEntityShapes()

/**Possible implimentation in the future:Have entity spawner take a room object and the rooms will have a list of spawn points for their local space. the level class itself will have a spawnlist for the current and last location of the player

	-EntitySpawner.Spawn(SpawnPoint)
	

	 

	SpriteBatcher.setTextureFrame();
	gc.setFrame()
	

	
	
}

createRoom()
{
	-
	
}


//RoomSpawner
CharacterSpawner
SpriteBatcher


MAP CLASS

The level class will unpackage a map file or save file and pass the data to the necessary classes.
(a save file will generally have the name of the current map file.)

Map data will be passed to the map class, such as tile information which will be used to create the tiled map and collision data which will be used to create wall objects.
The map object will divide the tile map into quadrants depending on the size.
A map object will store map layer objects along with the current map texture.
There will be three layers.(2 initially)

Each layer will be split into the same number of quadrants.




